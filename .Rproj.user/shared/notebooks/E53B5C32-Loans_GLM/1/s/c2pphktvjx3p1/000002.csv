"0","# ###################"
"0","# # CROSS-VALIDATION#"
"0","# ###################"
"0","# #VALIDATION SET"
"0","# set.seed(1)"
"0","# # Muestra de dim(df)[1]/2"
"0","# train <- sample(dim(df)[1],dim(df)[1]/2)# tbl of data and rows to select"
"0","# # length(train)"
"0","# # Defaultx no incluye train data = test data"
"0","# Defaultx <- df[-train,]"
"0","# # Estimamos el modelo sin income  "
"0","# glm.fit <- glm(default~. , data = df, family = binomial, subset = train)"
"0","# # Predecir el test.  "
"0","# glm.probs <- predict(glm.fit, Defaultx, type = ""response"")"
"0","# "
"0","# "
"0","# model_error <- function(cut_off){"
"0","#   # Crear un vector para guardar los resultados (No default) "
"0","#   glm.pred <- rep(0, dim(df)[1]/2)"
"0","#   # Reemplazar NO(0) por YES(1) cuando la probabilidad es mayor del cut_off"
"0","#   glm.pred[glm.probs > cut_off] = 1"
"0","#   # Crear un vector con los resultados"
"0","#   defaultVector <- Defaultx$default "
"0","#   # Calculala media  "
"0","#   return(mean(glm.pred == defaultVector)*100)"
"0","# }"
"0","# model_error(0.001)"
"0","# model_error(0.002)"
"0","# model_error(0.003)"
"0","# model_error(0.006)"
"0","# model_error(0.007)"
"0","# model_error(0.008)"
"0","# model_error(0.009)"
"0","# model_error(0.01)"
"0","# model_error(0.02)"
"0","# model_error(0.03)"
"0",""
"0",""
"0","##########################"
"0","# K-FOLD CROSS-VALIDATION#"
"0","##########################"
"0","# #Aqui se utiliza boot"
"0","# library(boot)"
"0","# # Semilla"
"0","# set.seed(2)"
"0","# "
"0","# # Estimar el modelo"
"0","# # glm.fit1 <- glm(default~ int_rate+annual_inc+loan_amnt+home_rent , data = df, family = binomial)"
"0","# glm.fit1 <- glm(default~ int_rate+annual_inc , data = df, family = binomial)"
"0","# "
"0","# glm.fit1"
"0","# # Crear un vector para guardar los resultados"
"0","# cv.error <- rep(0,3)"
"0","# "
"0","# # Guardar los resultados para cada K  validation set. K= {3,5,10} "
"0","# cv.error[1] <- cv.glm(df, glm.fit1, K=3)$delta[1]"
"0","# cv.error[2] <- cv.glm(df, glm.fit1, K=5)$delta[1]"
"0","# cv.error[3] <- cv.glm(df, glm.fit1, K=10)$delta[1]"
"0","# "
"0","# cv.error"
"0","# # low mean(cv.error) = high 1-mean..."
"0","# 1- mean(cv.error) "
"0","# 0.9986289"
"0",""
"0","######################"
"0","# PARAMETER SELECTION#"
"0","# ######################"
"0","# # CROSS-VALIDATION"
"0","# set.seed(1)"
"0","# # Muestra de dim(df)[1]/2"
"0","# train <- sample(dim(df)[1],dim(df)[1]/2)# tbl of data and rows to select"
"0","# # Defaultx no incluye train data = test data"
"0","# Defaultx <- df[-train,]"
"0","# "
"0","# glm.fit <- glm(default~., data = df, family = binomial, subset = train)"
"0","# glm.probs <- predict(glm.fit, Defaultx, type = ""response"")"
"0","# "
"0","# "
"0","# glm.pred <- rep(0 , dim(df)[1])"
"0","# cut_off <- 0.03"
"0","# glm.pred[mod01.pred  > cut_off] = 1 #default"
"0","# "
"0","# defaultVector <- Defaultx$default "
"0","# mean(glm.pred == defaultVector)"
"0","# "
"0","# # K-FOLDS"
"0","# #Aqui se utiliza boot"
"0","# # Semilla"
"0","# set.seed(2)"
"0","# "
"0","# # Estimar el modelo"
"0","# glm.fit1 <- glm(default~., data = df, family = binomial)"
"0","# glm.fit1"
"0","# # Crear un vector para guardar los resultados"
"0","# cv.error <- rep(0,3)"
"0","# "
"0","# "
"0","# # Guardar los resultados para cada K  validation set. K= {3,5,10} "
"0","# cv.error[1] <- cv.glm(df, glm.fit1, K=3)$delta[1]"
"0","# cv.error[2] <- cv.glm(df, glm.fit1, K=5)$delta[1]"
"0","# cv.error[3] <- cv.glm(df, glm.fit1, K=10)$delta[1]"
"0","# "
"0","# cv.error"
"0","# # low mean(cv.error) = high 1-mean..."
"0","# 1- mean(cv.error)"
"0","# 0.9986289"
"0","# END OF PREDICTION ###################################################################################"
